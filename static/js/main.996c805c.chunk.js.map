{"version":3,"sources":["images/Completed.png","images/ImportCrew.png","images/Loading.png","utilities/InfoUtils.ts","utilities/Interfaces.ts","utilities/RosterUtils.ts","components/WarbandHeader.tsx","components/PdfInfoPage.tsx","components/RulesSection.tsx","components/StatsAndEquipmentSection.tsx","components/UnitHeader.tsx","components/PdfRoster.tsx","index.tsx","pages/PdfCreationPage.tsx","pages/LandingPage.tsx"],"names":["AllSkills","Skills","AllSpells","Spells","AllEquipment","Equipment","AllArmour","filter","eq","Armour","AllMeleeWeapons","MeleeWeapons","AllMissileWeapons","MissileWeapons","AllMiscallaneous","Miscallaneous","findSkills","units","unitsWithRules","unit","rules","skills","Set","reduce","acc","regex","RegExp","unitRules","split","map","rule","trim","foundSkill","find","skill","name","indexOf","classStart","lastIndexOf","classEnd","mappedSpells","substring","entry","accum","element","foundSpell","spell","console","log","getEquipmentRules","ruleString","EquipmentRules","isHero","undefined","hero","isSpell","skillOrSpell","castingCost","extractExperience","nameAndXp","bracketStart","bracketEnd","parseInt","getNextLevelUp","currentXp","extractName","group","extractClass","extractHenchmenBodies","henchmen","numberEnd","isNaN","charAt","getRoutLimit","heroes","Math","ceil","length","prev","curr","getWarbandSize","WarbandHeader","warband","className","style","display","justifyContent","heros","henchmanGroup","isLargeHenchman","gc","shards","PdfInfoPage","state","spells","entity","equipment","unitsWithEquipment","weapons","armour","uniqueEquipment","unitWeapons","unitArmour","weapon","foundArmour","equi","foundEquipment","type","melee","missile","misc","findEquipment","Fragment","id","notes","NotesSection","SkillsSection","text","SpellsSection","EquipmentSection","armourType","isArmour","strengthModifier","isMelee","genus","isMisc","range","isMissile","strength","RulesSection","Unit","flexDirection","StatsAndEquipmentSection","statLine","statString","statArr","subString","replace","M","WS","BS","S","T","W","I","A","LD","Sv","getStatLine","stats","WeaponsPart","ArmourPart","borderTop","Object","entries","key","value","textAlign","UnitHeader","PdfRoster","top","marginLeft","ReactDOM","StrictMode","path","component","history","useHistory","location","exportPdf","jsPdf","jsPDF","html2canvas","document","querySelector","scale","canvas","addImage","toDataURL","internal","pageSize","getWidth","getHeight","addPage","save","useState","showSuccess","setSuccess","useEffect","src","CompletedPng","margin","width","alt","onClick","goBack","LoadingPng","htmlFor","accept","onChange","reader","FileReader","onload","ev","jsobject","yaml","target","result","push","readAsText","files","item","ImportWarbandPng","getElementById","click"],"mappings":"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","file":"static/js/main.996c805c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Completed.7ca392ee.png\";","export default __webpack_public_path__ + \"static/media/ImportCrew.e5abae4c.png\";","export default __webpack_public_path__ + \"static/media/Loading.382232d0.png\";","import * as Equipment from \"../data/Equipment.json\";\r\nimport * as EquipmentRules from \"../data/EquipmentRules.json\";\r\nimport * as Skills from \"../data/Skills.json\";\r\nimport * as Spells from \"../data/Spells.json\";\r\nimport { ArmourEntity, EquipmentEntity, EquipmentRulesEntity, HenchmenEntity, HerosEntity, MeleeWeaponsEntity, MiscallaneousEntity, MissileWeaponsEntity, SkillsEntity, SpellsEntity } from \"./Interfaces\";\r\n\r\nconst AllSkills = Skills.Skills as SkillsEntity[];\r\nconst AllSpells = Spells.Spells as SpellsEntity[];\r\nconst AllEquipment = Equipment.equipment as EquipmentEntity[];\r\nconst AllArmour = AllEquipment.filter((eq) => eq.Armour)[0].Armour as ArmourEntity[];\r\nconst AllMeleeWeapons = AllEquipment.filter((eq) => eq.MeleeWeapons)[0].MeleeWeapons as MeleeWeaponsEntity[];\r\nconst AllMissileWeapons = AllEquipment.filter((eq) => eq.MissileWeapons)[0].MissileWeapons as MissileWeaponsEntity[];\r\nconst AllMiscallaneous = AllEquipment.filter((eq) => eq.Miscallaneous)[0].Miscallaneous as MiscallaneousEntity[];\r\n\r\nexport const findSkills = (units: Array<HerosEntity | HenchmenEntity>): Array<SpellsEntity | SkillsEntity | undefined> => {\r\n    const unitsWithRules = units.filter((unit) => unit.rules);\r\n    const uniqueRules = [...new Set(unitsWithRules.reduce((acc, unit) => {\r\n        if (unit.rules) {\r\n            const regex = new RegExp(/(?<!\\(),(?![\\w\\s]*[)])/);\r\n            const unitRules = unit.rules.split(regex).map((rule) => rule.trim());\r\n            return [...acc, ...unitRules];\r\n        }\r\n        return acc;\r\n    }, [] as string[]))];\r\n    // tslint:disable: no-console\r\n    const skills = uniqueRules.reduce((acc, rule) => {\r\n        const foundSkill = AllSkills.find((skill) => skill.name === rule);\r\n        if (foundSkill) {\r\n            return [...acc, foundSkill];\r\n        }\r\n        if (rule.indexOf(\"Wizard\") !== -1) {\r\n            const classStart = rule.lastIndexOf(\"(\");\r\n            const classEnd = rule.lastIndexOf(\")\");\r\n            const spellName = rule.substring(classStart + 1, classEnd);\r\n            const allSpells = spellName.split(\",\").map((entry) => entry.trim());\r\n            const mappedSpells = allSpells.reduce((accum, element) => {\r\n                const foundSpell = AllSpells.find((spell) => spell.name === element);\r\n                if (foundSpell) {\r\n                    return [...accum, foundSpell];\r\n                }\r\n                return accum;\r\n            }, [] as SpellsEntity[]);\r\n            return [...acc, ...mappedSpells];\r\n        }\r\n        if (rule.indexOf(\"Hatred\") !== -1) {\r\n            return [...acc, AllSkills.find((skill) => skill.name === \"Hatred\") as SkillsEntity];\r\n        }\r\n        return acc;\r\n    }, [] as Array<SpellsEntity | SkillsEntity>);\r\n    console.log(skills);\r\n    return skills;\r\n};\r\n\r\nexport const findEquipment = (units: Array<HerosEntity | HenchmenEntity>): Array<MeleeWeaponsEntity | MissileWeaponsEntity | ArmourEntity | MiscallaneousEntity> => {\r\n    const unitsWithEquipment = units.filter((unit) => unit.weapons || unit.armour);\r\n    const uniqueEquipment = [...new Set(unitsWithEquipment.reduce((acc, unit) => {\r\n        let unitWeapons: string[] = [];\r\n        let unitArmour: string[] = [];\r\n        if (unit.weapons) {\r\n            unitWeapons = unit.weapons.split(\",\").map((weapon) => weapon.trim());\r\n        }\r\n        if (unit.armour) {\r\n            unitArmour = unit.armour.split(\",\").map((armour) => armour.trim());\r\n        }\r\n        return [...acc, ...unitWeapons, ...unitArmour];\r\n    }, [] as string[]))];\r\n    const foundArmour = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllArmour.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as ArmourEntity[];\r\n    const melee = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllMeleeWeapons.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as MeleeWeaponsEntity[];\r\n    const missile = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllMissileWeapons.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as MissileWeaponsEntity[];\r\n    const misc = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllMiscallaneous.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as MiscallaneousEntity[];\r\n    return [...foundArmour, ...melee, ...missile, ...misc];\r\n};\r\n\r\nexport const getEquipmentRules = (rules: string[]): EquipmentRulesEntity[] => {\r\n    const mappedRules = rules.map((ruleString) => EquipmentRules.rules.find((rule) => rule.name === ruleString));\r\n    return mappedRules.filter((entry) => entry) as EquipmentRulesEntity[];\r\n};\r\n","export interface WarbandState {\r\n    warband: string;\r\n    campaign: number;\r\n    gc: number;\r\n    shards: number;\r\n    objective: string;\r\n    alignment: string;\r\n    heros?: HerosEntity[];\r\n    henchmen?: HenchmenEntity[];\r\n    notes?: string;\r\n}\r\n\r\nexport interface HerosEntity {\r\n    hero: string;\r\n    stats: string;\r\n    weapons: string;\r\n    armour?: string;\r\n    rules?: string;\r\n    skilllists: string;\r\n}\r\n\r\nexport interface HenchmenEntity {\r\n    group: string;\r\n    stats: string;\r\n    weapons?: string;\r\n    armour?: string;\r\n    rules?: string;\r\n}\r\n\r\nexport interface Stats {\r\n    M: number;\r\n    WS: number;\r\n    BS: number;\r\n    S: number;\r\n    T: number;\r\n    W: number;\r\n    I: number;\r\n    A: number;\r\n    LD: number;\r\n    Sv: string;\r\n}\r\n\r\nexport interface SkillsEntity {\r\n    name: string;\r\n    type: string;\r\n    text: string;\r\n    prerequisite?: Prerequisite;\r\n}\r\n\r\nexport interface Prerequisite {\r\n    type: string;\r\n    condition: number | string;\r\n    lookup?: string;\r\n}\r\n\r\nexport interface SpellsEntity {\r\n    name: string;\r\n    type: string;\r\n    castingCost: string;\r\n    text: string;\r\n}\r\n\r\nexport interface EquipmentEntity {\r\n    MeleeWeapons?: MeleeWeaponsEntity[];\r\n    MissileWeapons?: MissileWeaponsEntity[];\r\n    Armour?: ArmourEntity[];\r\n    Miscallaneous?: MiscallaneousEntity[];\r\n}\r\nexport interface MeleeWeaponsEntity {\r\n    type: string;\r\n    cost: number;\r\n    rarity: number;\r\n    weaponType: string;\r\n    rules?: string[];\r\n    strengthModifier: string;\r\n}\r\nexport interface MissileWeaponsEntity {\r\n    type: string;\r\n    cost: number;\r\n    rarity: number;\r\n    weaponType: string;\r\n    rules?: string[];\r\n    strength: number | string;\r\n    range: number;\r\n    variableCost?: string;\r\n}\r\nexport interface ArmourEntity {\r\n    type: string;\r\n    cost: number;\r\n    rarity: number;\r\n    armourType: string;\r\n    rules?: string[];\r\n    armour: number;\r\n    variableCost?: string;\r\n}\r\nexport interface MiscallaneousEntity {\r\n    type: string;\r\n    cost: number;\r\n    variableCost?: string;\r\n    rarity: number;\r\n    genus: string;\r\n    rules?: string[];\r\n    text?: string;\r\n}\r\n\r\nexport interface EquipmentRulesEntity {\r\n    name: string;\r\n    text: string;\r\n}\r\n\r\n// Type guards\r\nexport const isHero = (unit: HenchmenEntity | HerosEntity): unit is HerosEntity => (unit as HerosEntity).hero !== undefined;\r\nexport const isSpell = (skillOrSpell: SkillsEntity | SpellsEntity): skillOrSpell is SpellsEntity => (skillOrSpell as SpellsEntity).castingCost !== undefined;\r\nexport const isArmour = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is ArmourEntity => (equipment as ArmourEntity).armourType !== undefined;\r\nexport const isMisc = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is MiscallaneousEntity => (equipment as MiscallaneousEntity).genus !== undefined;\r\nexport const isMelee = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is MeleeWeaponsEntity => (equipment as MeleeWeaponsEntity).strengthModifier !== undefined;\r\nexport const isMissile = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is MissileWeaponsEntity => (equipment as MissileWeaponsEntity).range !== undefined;\r\n","import { HenchmenEntity, HerosEntity, isHero, Stats } from \"./Interfaces\";\r\n\r\nexport const extractExperience = (hero: HerosEntity): number => {\r\n    const nameAndXp = hero.hero;\r\n    const bracketStart = nameAndXp.lastIndexOf(\"[\");\r\n    const bracketEnd = nameAndXp.lastIndexOf(\"]\");\r\n    return parseInt(nameAndXp.substring(bracketStart + 1, bracketEnd), 10);\r\n};\r\n\r\nexport const getNextLevelUp = (currentXp: number): number => {\r\n    switch (currentXp) {\r\n        case 0:\r\n        case 1: return 2;\r\n        case 2:\r\n        case 3: return 4;\r\n        case 4:\r\n        case 5: return 6;\r\n        case 6:\r\n        case 7: return 8;\r\n        case 8:\r\n        case 9:\r\n        case 10: return 11;\r\n        case 11:\r\n        case 12:\r\n        case 13: return 14;\r\n        case 14:\r\n        case 15:\r\n        case 16: return 17;\r\n        case 17:\r\n        case 18:\r\n        case 19: return 20;\r\n        case 20:\r\n        case 21:\r\n        case 22:\r\n        case 23: return 24;\r\n        case 24:\r\n        case 25:\r\n        case 26:\r\n        case 27: return 28;\r\n        case 28:\r\n        case 29:\r\n        case 30:\r\n        case 31: return 32;\r\n        case 32:\r\n        case 33:\r\n        case 34:\r\n        case 35: return 36;\r\n        case 36:\r\n        case 37:\r\n        case 38:\r\n        case 39:\r\n        case 40: return 41;\r\n        default: return 0;\r\n    }\r\n};\r\n\r\nexport const extractName = (unit: HerosEntity | HenchmenEntity): string => {\r\n    const nameAndXp = isHero(unit) ? unit.hero : unit.group;\r\n    const classStart = nameAndXp.lastIndexOf(\"(\");\r\n    return nameAndXp.substring(0, classStart);\r\n};\r\n\r\nexport const extractClass = (unit: HerosEntity | HenchmenEntity): string => {\r\n    const nameAndXp = isHero(unit) ? unit.hero : unit.group;\r\n    const classStart = nameAndXp.lastIndexOf(\"(\");\r\n    const classEnd = nameAndXp.lastIndexOf(\")\");\r\n    return nameAndXp.substring(classStart + 1, classEnd);\r\n};\r\n\r\nexport const extractHenchmenBodies = (henchmen: HenchmenEntity): number => {\r\n    const nameAndXp = henchmen.group;\r\n    const bracketStart = nameAndXp.lastIndexOf(\"(\");\r\n    const numberEnd = isNaN(parseInt(nameAndXp.charAt(bracketStart + 2), 10)) ? bracketStart + 2 : bracketStart + 3;\r\n    return parseInt(nameAndXp.substring(bracketStart + 1, numberEnd), 10);\r\n};\r\n\r\nexport const isLargeHenchman = (henchmanGroup: HenchmenEntity): boolean => {\r\n    const rules = henchmanGroup.rules;\r\n    if (rules) {\r\n        return rules.indexOf(\"Large\") !== -1;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const getWarbandRating = (heroes: HerosEntity[], henchmen: HenchmenEntity[]): number => {\r\n    const experience = heroes.reduce((prev, curr) => prev + extractExperience(curr), 0) || 0;\r\n    const heroBodies = heroes.length * 5;\r\n    const henchmenBodies = henchmen.reduce((prev, curr) => prev + extractHenchmenBodies(curr) + (isLargeHenchman(curr) ? 3 : 0), 0) * 5;\r\n    return experience + heroBodies + henchmenBodies;\r\n};\r\n\r\nexport const getWarbandSize = (heroes: HerosEntity[], henchmen: HenchmenEntity[]): number => heroes.length + henchmen.reduce((prev, curr) => prev + extractHenchmenBodies(curr), 0);\r\nexport const getRoutLimit = (heroes: HerosEntity[], henchmen: HenchmenEntity[]): number => Math.ceil(getWarbandSize(heroes, henchmen) / 4);\r\n\r\nexport const getStatLine = (statString: string): Stats => {\r\n    const statArr = statString.split(\",\").map((subString) => parseInt(subString.replace(/^\\D+/g, \"\"), 10));\r\n    return {\r\n        M: statArr[0],\r\n        WS: statArr[1],\r\n        BS: statArr[2],\r\n        S: statArr[3],\r\n        T: statArr[4],\r\n        W: statArr[5],\r\n        I: statArr[6],\r\n        A: statArr[7],\r\n        LD: statArr[8],\r\n        Sv: statString.substring(statString.indexOf(\"Sv\") + 2),\r\n    };\r\n};\r\n","import { WarbandState } from \"../utilities/Interfaces\";\r\nimport { getRoutLimit, getWarbandRating } from \"../utilities/RosterUtils\";\r\n\r\nexport const WarbandHeader = ({ warband }: { warband: WarbandState }) =>\r\n    <div className=\"unit-container\">\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Warband Name: </div>\r\n                <div className=\"text-with-margins\">{warband.warband}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Warband Rating: </div>\r\n                <div className=\"text-with-margins\">{getWarbandRating(warband.heros || [], warband.henchmen || [])}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Rout Limit: </div>\r\n                <div className=\"text-with-margins\">{getRoutLimit(warband.heros || [], warband.henchmen || [])}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Gold Coins: </div>\r\n                <div className=\"text-with-margins\">{warband.gc}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Shards: </div>\r\n                <div className=\"text-with-margins\">{warband.shards}</div>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n","import React from \"react\";\r\nimport { findEquipment, findSkills, getEquipmentRules } from \"../utilities/InfoUtils\";\r\nimport { ArmourEntity, isArmour, isMelee, isMisc, isMissile, isSpell, MeleeWeaponsEntity, MiscallaneousEntity, MissileWeaponsEntity, SkillsEntity, SpellsEntity, WarbandState } from \"../utilities/Interfaces\";\r\nimport { WarbandHeader } from \"./WarbandHeader\";\r\n\r\nexport const PdfInfoPage = ({ state }: { state: WarbandState }) => {\r\n    const heroes = state.heros || [];\r\n    const henchmen = state.henchmen || [];\r\n    const units = [...heroes, ...henchmen];\r\n    const spells = findSkills(units).filter((entity) => entity && isSpell(entity)) as SpellsEntity[];\r\n    const skills = findSkills(units).filter((entity) => entity && !isSpell(entity)) as SkillsEntity[];\r\n    const equipment = findEquipment(units);\r\n    return <React.Fragment>\r\n        <div className=\"pdf-container\" id=\"pdf-info-page\">\r\n            <WarbandHeader warband={state} />\r\n            <div className=\"unit-container\">\r\n                <NotesSection notes={state.notes} />\r\n                <SkillsSection skills={skills} />\r\n                <SpellsSection spells={spells} />\r\n                <EquipmentSection equipment={equipment} />\r\n            </div>\r\n        </div>\r\n    </React.Fragment>;\r\n};\r\n\r\nconst NotesSection = ({ notes }: { notes: string | undefined }) => {\r\n    if (!notes) {\r\n        return null;\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"large-header\">Notes</div>\r\n        <div className=\"text-with-margins\">{notes}</div>\r\n    </React.Fragment>;\r\n};\r\n\r\nconst SkillsSection = ({ skills }: { skills: SkillsEntity[] }) => <React.Fragment>\r\n    {skills.length > 0 ? <div className=\"large-header\">Skills and other Rules</div> : undefined}\r\n    {skills.map((entity) => <div className=\"info-page-flexbox\">\r\n        <div className=\"bold-text-with-margins\">{entity.type === \"Generic\" ? `${entity.name}` : `${entity.name} (${entity.type})`}</div>\r\n        <div className=\"text-with-margins\">{entity.text}</div>\r\n    </div>)}\r\n</React.Fragment>;\r\n\r\nconst SpellsSection = ({ spells }: { spells: SpellsEntity[] }) => <React.Fragment>\r\n    {spells.length > 0 ? <div className=\"large-header\">Spells</div> : undefined}\r\n    {spells.map((entity) => <div className=\"info-page-flexbox\">\r\n        <div className=\"bold-text-with-margins\">{`${entity.name} (${entity.type}) [${entity.castingCost}]`}</div>\r\n        <div className=\"text-with-margins\">{entity.text}</div>\r\n    </div>)}\r\n</React.Fragment>;\r\n\r\nconst EquipmentSection = ({ equipment }: { equipment: Array<MeleeWeaponsEntity | MissileWeaponsEntity | ArmourEntity | MiscallaneousEntity> }) => <React.Fragment>\r\n    {equipment.length > 0 ? <div className=\"large-header\">Equipment</div> : undefined}\r\n    {equipment.map((entity) => {\r\n        if (isArmour(entity)) {\r\n            return <div className=\"info-page-flexbox\">\r\n                <div className=\"bold-text-with-margins\">{`${entity.type}`}</div>\r\n                <div className=\"text-with-margins\"><div>{`Add +${entity.armour} to your armour save.`}</div>{getEquipmentRules(entity.rules || []).map((rule) => <div>{rule.text}</div>)}</div>\r\n            </div>;\r\n        }\r\n        if (isMelee(entity)) {\r\n            return <div className=\"info-page-flexbox\">\r\n                <div className=\"bold-text-with-margins\">{`${entity.type} (Strength ${entity.strengthModifier || \"+0\"})`}</div>\r\n                <div className=\"text-with-margins\">{getEquipmentRules(entity.rules || []).map((rule) => <div>{rule.text}</div>)}</div>\r\n            </div>;\r\n        }\r\n        if (isMisc(entity)) {\r\n            return <div className=\"info-page-flexbox\">\r\n                <div className=\"bold-text-with-margins\">{`${entity.type}`}</div>\r\n                {entity.rules ? <div className=\"text-with-margins\">{getEquipmentRules(entity.rules).map((rule) => <div>{rule.text}</div>)}</div> : <div className=\"text-with-margins\">{entity.text}</div>}\r\n            </div>;\r\n        }\r\n        if (isMissile(entity)) {\r\n            return <div className=\"info-page-flexbox\">\r\n                <div className=\"bold-text-with-margins\">{`${entity.type} (Strength ${entity.strength}, Range ${entity.range})`}</div>\r\n                <div className=\"text-with-margins\">{getEquipmentRules(entity.rules || []).map((rule) => <div>{rule.text}</div>)}</div>\r\n            </div>;\r\n        }\r\n        return undefined;\r\n    }\r\n    )}\r\n</React.Fragment>;\r\n","import React from \"react\";\r\nimport { HenchmenEntity, HerosEntity } from \"../utilities/Interfaces\";\r\n\r\nexport const RulesSection = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) => {\r\n    const rules = Unit.rules;\r\n    return rules ? <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div className=\"bold-text-with-margins\">Rules: </div>\r\n        <div className=\"text-with-margins\">{rules}</div>\r\n    </div> : <React.Fragment />;\r\n};\r\n","import React from \"react\";\r\nimport { HenchmenEntity, HerosEntity } from \"../utilities/Interfaces\";\r\nimport { getStatLine } from \"../utilities/RosterUtils\";\r\n\r\nexport const StatsAndEquipmentSection = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) => {\r\n    const statLine = getStatLine(Unit.stats);\r\n    const WeaponsPart = () => {\r\n        const weapons = Unit.weapons;\r\n        return weapons ? <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div className=\"bold-text-with-margins\">Weapons: </div>\r\n            <div className=\"text-with-margins\">{weapons}</div>\r\n        </div> : <React.Fragment />;\r\n    };\r\n    const ArmourPart = () => {\r\n        const armour = Unit.armour;\r\n        return armour ? <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div className=\"bold-text-with-margins\">Armour: </div>\r\n            <div className=\"text-with-margins\">{armour}</div>\r\n        </div> : <React.Fragment />;\r\n    };\r\n\r\n    return <div className=\"unit-layout\" style={{ borderTop: \"0.1rem solid\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div style={{ display: \"flex\" }}>\r\n                {Object.entries(statLine).map(([key, value]) =>\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        <div className=\"bold-text-with-margins\">{key}</div>\r\n                        <div className=\"text-with-margins\" style={{ textAlign: \"center\" }}>{value}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n        <WeaponsPart />\r\n        <ArmourPart />\r\n    </div >;\r\n};\r\n","import { HenchmenEntity, HerosEntity, isHero } from \"../utilities/Interfaces\";\r\nimport { extractClass, extractExperience, extractName, getNextLevelUp } from \"../utilities/RosterUtils\";\r\n\r\nexport const UnitHeader = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) =>\r\n    <div className=\"unit-layout\">\r\n        <div style={{ display: \"flex\" }}>\r\n            <div className=\"bold-text-with-margins\">Name: </div>\r\n            <div className=\"text-with-margins\">{extractName(Unit)}</div>\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n            <div className=\"bold-text-with-margins\">Type: </div>\r\n            <div className=\"text-with-margins\">{extractClass(Unit)}</div>\r\n        </div>\r\n        {isHero(Unit) ? <div style={{ display: \"flex\" }}>\r\n            <div className=\"bold-text-with-margins\">Level: </div>\r\n            <div className=\"text-with-margins\">{`${extractExperience(Unit)} [ +${getNextLevelUp(extractExperience(Unit)) - extractExperience(Unit)} ]`}</div>\r\n        </div> : <div></div>}\r\n    </div>;\r\n","import React from \"react\";\r\nimport { WarbandState } from \"../utilities/Interfaces\";\r\nimport { RulesSection } from \"./RulesSection\";\r\nimport { StatsAndEquipmentSection } from \"./StatsAndEquipmentSection\";\r\nimport { UnitHeader } from \"./UnitHeader\";\r\nimport { WarbandHeader } from \"./WarbandHeader\";\r\n\r\nexport const PdfRoster = ({ state }: { state: WarbandState }) => {\r\n    const heroes = state.heros || [];\r\n    const henchmen = state.henchmen || [];\r\n    const units = [...heroes, ...henchmen];\r\n    return <React.Fragment>\r\n        <div className=\"pdf-container\" style={{ top: \"-10000px\" }} id=\"pdf-roster\">\r\n            <WarbandHeader warband={state} />\r\n            {units.map((unit) =>\r\n                <div className=\"unit-container\">\r\n                    <UnitHeader Unit={unit} />\r\n                    <StatsAndEquipmentSection Unit={unit} />\r\n                    <RulesSection Unit={unit} />\r\n                </div>)}\r\n            <div style={{ marginLeft: \"1rem\" }}>* the [ +* ] notation behind the level states how many level ups you need to gain an advance</div>\r\n        </div>\r\n\r\n    </React.Fragment>;\r\n};\r\n","import React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./css/App.css\";\r\nimport { LandingPage, PdfCreationPage } from \"./pages\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <div className=\"app-body\">\r\n        <Switch>\r\n          <Route path=\"/PdfExport\" component={PdfCreationPage} />\r\n          <Route path=\"/\" component={LandingPage} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PdfInfoPage, PdfRoster } from \"../components\";\r\nimport \"../css/Pdf.css\";\r\nimport { CompletedPng, LoadingPng } from \"../images\";\r\nimport { WarbandState } from \"../utilities/Interfaces\";\r\n\r\nexport const PdfCreationPage = () => {\r\n    const history = useHistory();\r\n    const state = history.location.state as WarbandState;\r\n    const exportPdf = async () => {\r\n        const jsPdf = new jsPDF(\"portrait\", \"mm\", \"a4\", true);\r\n        let canvas: HTMLCanvasElement;\r\n        canvas = await html2canvas(document.querySelector(\"#pdf-roster\") as HTMLElement, { scale: 4 });\r\n        jsPdf.addImage(canvas.toDataURL(\"image/png\"), \"JPEG\", 0, 0, jsPdf.internal.pageSize.getWidth(), jsPdf.internal.pageSize.getHeight());\r\n\r\n        jsPdf.addPage();\r\n        canvas = await html2canvas(document.querySelector(\"#pdf-info-page\") as HTMLElement, { scale: 4 });\r\n        jsPdf.addImage(canvas.toDataURL(\"image/png\"), \"JPEG\", 0, 0, jsPdf.internal.pageSize.getWidth(), jsPdf.internal.pageSize.getHeight());\r\n        jsPdf.save(`${state.warband}.pdf`);\r\n    };\r\n    const [showSuccess, setSuccess] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        // tslint:disable-next-line: no-floating-promises\r\n        (async () => {\r\n            await exportPdf();\r\n            setSuccess(true);\r\n        })();\r\n        return () => {\r\n            // this now gets called when the component unmounts\r\n        };\r\n    });\r\n    return <React.Fragment>\r\n        {showSuccess ?\r\n            <React.Fragment>\r\n                <img src={CompletedPng} style={{ margin: \"5rem 3rem\", width: \"75%\" }} alt=\"Complete Icon\"></img>\r\n                <div className=\"large-header\">Enjoy your pdf</div>\r\n                <div\r\n                    className=\"back-btn\"\r\n                    onClick={() => history.goBack()}\r\n                >Back</div>\r\n            </React.Fragment> :\r\n            <React.Fragment>\r\n                <img src={LoadingPng} style={{ margin: \"5rem 3rem\", width: \"75%\" }} alt=\"Loading Icon\"></img>\r\n                <div className=\"large-header\">Please be patient. </div>\r\n                <div className=\"large-header\">The Snotlings are painting your pdf right now.</div>\r\n                <div className=\"large-header\">They are almost done.</div>\r\n                <div className=\"large-header\">Hang on...</div>\r\n            </React.Fragment>\r\n        }\r\n        <PdfRoster state={state} />\r\n        <PdfInfoPage state={state} />\r\n    </React.Fragment>;\r\n};\r\n","import * as yaml from \"js-yaml\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ImportWarbandPng } from \"./../images\";\r\nexport const LandingPage = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    return <div className=\"flex-container\" style={{ textAlign: \"center\" }}>\r\n        <label htmlFor=\"file-uploader\" className=\"flex-container\">\r\n            <input\r\n                id=\"file-uploader\"\r\n                type=\"file\"\r\n                accept=\".yml\"\r\n                style={{ display: \"none\" }}\r\n                onChange={() => {\r\n                    const reader = new FileReader();\r\n                    reader.onload = (ev: ProgressEvent<FileReader>) => {\r\n                        const jsobject = yaml.load(ev.target?.result as string);\r\n                        history.push(\"/PdfExport\", jsobject);\r\n                    };\r\n                    reader.readAsText((document.querySelector(\"#file-uploader\") as HTMLInputElement)?.files?.item(0) as File);\r\n                }}\r\n            />\r\n            <img style={{ margin: \"5rem 1rem\" }} src={ImportWarbandPng} alt=\"Import Icon\"></img>\r\n            <div className=\"large-header\" onClick={() => document.getElementById(\"file-uploader\")?.click()}>Tap here to load your .yml file and get a nice pdf for it</div>\r\n        </label>\r\n    </div>;\r\n};\r\n"],"sourceRoot":""}